{"ast":null,"code":"var _jsxFileName = \"/Users/morgan/dev/paintings/src/PhotoGallery.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createSearchParams, useNavigate } from 'react-router-dom';\nimport Gallery from 'react-photo-gallery';\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Captions from \"yet-another-react-lightbox/plugins/captions\";\nimport \"yet-another-react-lightbox/styles.css\";\nimport \"yet-another-react-lightbox/plugins/captions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getPaintingTitle(p) {\n  let title = `Painting #${p.id}`;\n  if (p.name) {\n    title += ` - ${p.name}`;\n  }\n  if (p.year) {\n    title += ` (${p.year})`;\n  }\n  return title;\n}\nfunction getPaintingDescription(p) {\n  const parts = [];\n  if (p.size) {\n    parts.push(p.size);\n  }\n  if (p.medium) {\n    parts.push(p.medium);\n  }\n  if (p.isFramed) {\n    parts.push('Framed');\n  }\n  if (p.isFramed === false) {\n    // undefined means we don't know if it's framed or not\n    parts.push('Unframed');\n  }\n  return parts.join('\\n');\n\n  //   let description = '';\n  //   if (p.size) {\n  //     description += `${p.size}`;\n  //   }\n  //   description += `, Medium: ${p.medium}, Status: ${p.status}, Framed: ${p.isFramed}, Condition Notes: ${p.conditionNotes}`;\n  //   return description;\n}\nexport default function PhotoGallery(props) {\n  _s();\n  const {\n    paintings\n  } = props;\n  const navigate = useNavigate();\n  const params = new URLSearchParams(document.location.search);\n  // Track the painting id and not index in the header, so that the URL can be shared\n  // even when the order of the paintings changes.\n  const selectedPhotoId = params.get('selected');\n  const selectedPhotoIdx = selectedPhotoId ? paintings.findIndex(p => p.id === parseInt(selectedPhotoId)) : undefined;\n  debugger;\n  const photos = paintings.map(p => {\n    var _p$year;\n    if (p.size) {\n      description += `${p.size}`;\n    }\n    const description = `${p.size}, Medium: ${p.medium}, Status: ${p.status}, Framed: ${p.isFramed}, Condition Notes: ${p.conditionNotes}`;\n    const title = getPaintingTitle(p);\n    return {\n      src: p.photo.url,\n      width: p.photo.width,\n      height: p.photo.height,\n      source: p.photo.url,\n      caption: title,\n      original: p.photo.url,\n      thumbnail: p.photo.url,\n      id: p.id,\n      title,\n      description: (_p$year = p.year) === null || _p$year === void 0 ? void 0 : _p$year.toString()\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Gallery, {\n      photos: photos,\n      onClick: (e, {\n        index\n      }) => {\n        var _photos$index;\n        const nextSelectedId = (_photos$index = photos[index]) === null || _photos$index === void 0 ? void 0 : _photos$index.id;\n        if (nextSelectedId) {\n          navigate({\n            pathname: document.location.pathname,\n            search: createSearchParams({\n              selected: nextSelectedId.toString()\n            }).toString()\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Lightbox, {\n      styles: {\n        captionsTitleContainer: {\n          backgroundColor: 'transparent'\n        },\n        captionsTitle: {\n          paddingLeft: '40px'\n        },\n        captionsDescriptionContainer: {\n          backgroundColor: 'transparent'\n        },\n        captionsDescription: {\n          paddingLeft: '40px'\n        }\n      },\n      open: selectedPhotoIdx !== undefined,\n      close: () => navigate({\n        pathname: document.location.pathname\n      }),\n      index: selectedPhotoIdx,\n      slides: photos,\n      plugins: [Captions],\n      on: {\n        view: ({\n          index\n        }) => {\n          var _photos$index2;\n          const nextSelectedId = (_photos$index2 = photos[index]) === null || _photos$index2 === void 0 ? void 0 : _photos$index2.id;\n          if (nextSelectedId) {\n            navigate({\n              pathname: document.location.pathname,\n              search: createSearchParams({\n                selected: nextSelectedId.toString()\n              }).toString()\n            });\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(PhotoGallery, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PhotoGallery;\nvar _c;\n$RefreshReg$(_c, \"PhotoGallery\");","map":{"version":3,"names":["React","createSearchParams","useNavigate","Gallery","Lightbox","Captions","jsxDEV","_jsxDEV","getPaintingTitle","p","title","id","name","year","getPaintingDescription","parts","size","push","medium","isFramed","join","PhotoGallery","props","_s","paintings","navigate","params","URLSearchParams","document","location","search","selectedPhotoId","get","selectedPhotoIdx","findIndex","parseInt","undefined","photos","map","_p$year","description","status","conditionNotes","src","photo","url","width","height","source","caption","original","thumbnail","toString","children","onClick","e","index","_photos$index","nextSelectedId","pathname","selected","fileName","_jsxFileName","lineNumber","columnNumber","styles","captionsTitleContainer","backgroundColor","captionsTitle","paddingLeft","captionsDescriptionContainer","captionsDescription","open","close","slides","plugins","on","view","_photos$index2","_c","$RefreshReg$"],"sources":["/Users/morgan/dev/paintings/src/PhotoGallery.tsx"],"sourcesContent":["import React from 'react';\nimport { createSearchParams, useNavigate } from 'react-router-dom';\nimport Gallery from 'react-photo-gallery'\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Captions from \"yet-another-react-lightbox/plugins/captions\";\nimport \"yet-another-react-lightbox/styles.css\";\nimport \"yet-another-react-lightbox/plugins/captions.css\";\n\nimport { Painting } from './types';\n\nfunction getPaintingTitle(p: Painting) {\n  let title = `Painting #${p.id}`;\n  if (p.name) {\n    title += ` - ${p.name}`;\n  }\n  if (p.year) {\n    title += ` (${p.year})`;\n  }\n  return title;\n}\n\nfunction getPaintingDescription(p: Painting) {\n  const parts = [];\n  if (p.size) {\n    parts.push(p.size);\n  }\n  if (p.medium) {\n    parts.push(p.medium);\n  }\n  if (p.isFramed) {\n    parts.push('Framed');\n  }\n  if (p.isFramed === false) { // undefined means we don't know if it's framed or not\n    parts.push('Unframed');\n  }\n  return parts.join('\\n');\n \n//   let description = '';\n//   if (p.size) {\n//     description += `${p.size}`;\n//   }\n//   description += `, Medium: ${p.medium}, Status: ${p.status}, Framed: ${p.isFramed}, Condition Notes: ${p.conditionNotes}`;\n//   return description;\n}\n\ninterface PhotoGalleryProps {\n  paintings: Painting[];\n}\n\nexport default function PhotoGallery(props: PhotoGalleryProps) {\n  const { paintings } = props;\n\n  const navigate = useNavigate();\n\n  const params = new URLSearchParams(document.location.search);\n  // Track the painting id and not index in the header, so that the URL can be shared\n  // even when the order of the paintings changes.\n  const selectedPhotoId = params.get('selected');\n  const selectedPhotoIdx = selectedPhotoId ? paintings.findIndex((p) => p.id === parseInt(selectedPhotoId)) : undefined;\n  debugger;\n\n  const photos = paintings.map((p) => {\n    if (p.size) {\n      description += `${p.size}`;\n    }\n    const description = `${p.size}, Medium: ${p.medium}, Status: ${p.status}, Framed: ${p.isFramed}, Condition Notes: ${p.conditionNotes}`;\n    const title = getPaintingTitle(p);\n    return {\n      src: p.photo.url,\n      width: p.photo.width,\n      height: p.photo.height,\n      source: p.photo.url,\n      caption: title,\n      original: p.photo.url,\n      thumbnail: p.photo.url,\n      id: p.id,\n      title,\n      description: p.year?.toString(),\n    };\n  });\n\n  return (\n    <div>\n      <Gallery\n        photos={photos}\n        onClick={(e, { index }) => {\n          const nextSelectedId = photos[index]?.id;\n          if (nextSelectedId) {\n            navigate({\n              pathname: document.location.pathname,\n              search: createSearchParams({\n                selected: nextSelectedId.toString(),\n              }).toString()\n            });\n          }\n        }}\n      />\n      <Lightbox\n        styles={{\n          captionsTitleContainer: { backgroundColor: 'transparent' },\n          captionsTitle: { paddingLeft: '40px' },\n          captionsDescriptionContainer: { backgroundColor: 'transparent' },\n          captionsDescription: {\n            paddingLeft: '40px',\n          }\n        }}\n        open={selectedPhotoIdx !== undefined}\n        close={() => navigate({ pathname: document.location.pathname })}\n        index={selectedPhotoIdx}\n        slides={photos}\n        plugins={[Captions]}\n        on={{\n          view: ({ index }) => {\n            const nextSelectedId = photos[index]?.id;\n            if (nextSelectedId) {\n              navigate({\n                pathname: document.location.pathname,\n                search: createSearchParams({\n                  selected: nextSelectedId.toString(),\n                }).toString()\n              });\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}