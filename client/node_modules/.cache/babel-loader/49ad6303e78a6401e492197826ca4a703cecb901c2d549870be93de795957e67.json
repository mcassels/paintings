{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import App from'./App';import{Navigate,RouterProvider,createBrowserRouter}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const router=createBrowserRouter([{path:\"/\",element:/*#__PURE__*/_jsx(App,{})},{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})}]);const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(RouterProvider,{router:router})}));","map":{"version":3,"names":["React","ReactDOM","App","Navigate","RouterProvider","createBrowserRouter","jsx","_jsx","router","path","element","to","replace","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["/Users/morgan/dev/paintings/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Navigate, RouterProvider, createBrowserRouter } from 'react-router-dom';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n  },\n  {\n    path: \"*\",\n    element: <Navigate to=\"/\" replace />,\n  }\n]);\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,QAAQ,CAAEC,cAAc,CAAEC,mBAAmB,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjF,KAAM,CAAAC,MAAM,CAAGH,mBAAmB,CAAC,CACjC,CACEI,IAAI,CAAE,GAAG,CACTC,OAAO,cAAEH,IAAA,CAACL,GAAG,GAAE,CACjB,CAAC,CACD,CACEO,IAAI,CAAE,GAAG,CACTC,OAAO,cAAEH,IAAA,CAACJ,QAAQ,EAACQ,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CACrC,CAAC,CACF,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAGZ,QAAQ,CAACa,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC,CACDH,IAAI,CAACI,MAAM,cACTV,IAAA,CAACP,KAAK,CAACkB,UAAU,EAAAC,QAAA,cACfZ,IAAA,CAACH,cAAc,EAACI,MAAM,CAAEA,MAAO,CAAE,CAAC,CAClB,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}